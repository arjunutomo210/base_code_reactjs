{"ast":null,"code":"var _jsxFileName = \"D:\\\\myReact\\\\project-react-app\\\\src\\\\Container\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../Component/Post/Post\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        id: 1,\n        title: '',\n        body: '',\n        userId: 1\n      },\n      isUpdate: false\n    };\n\n    this.handleRemove = data => {\n      fetch('http://localhost:3004/posts/' + data, {\n        method: 'DELETE',\n        body: JSON.stringify({}),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(res => {\n        this.getPostAPI();\n      });\n    };\n\n    this.handleFormChange = event => {\n      let timestamp = new Date().getTime();\n      let formBlogPostNew = { ...this.state.formBlogPost\n      };\n      formBlogPostNew['id'] = timestamp;\n      formBlogPostNew[event.target.name] = event.target.value;\n      this.setState({\n        formBlogPost: formBlogPostNew\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.isUpdate) {\n        this.putDataAPI();\n      } else {\n        fetch('http://localhost:3004/posts/', {\n          method: 'POST',\n          body: JSON.stringify({\n            id: this.state.formBlogPost.id,\n            title: this.state.formBlogPost.title,\n            body: this.state.formBlogPost.body,\n            userId: 1\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(res => {\n          this.getPostAPI();\n        }, err => {\n          console.log('error: ', err);\n        });\n      }\n    };\n\n    this.handleUpdate = data => {\n      // console.log(data);\n      this.setState({\n        formBlogPost: data,\n        isUpdate: true\n      });\n    };\n\n    this.putDataAPI = data => {\n      fetch('http://localhost:3004/posts/', data, {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: this.state.formBlogPost.title.id,\n          title: this.state.formBlogPost.title,\n          body: this.state.formBlogPost.body,\n          userId: 1\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(res => {\n        this.getPostAPI();\n      }, err => {\n        console.log('error: ', err);\n      });\n    };\n  }\n\n  getPostAPI() {\n    fetch('http://localhost:3004/posts?_sort=id&_order=desc').then(response => response.json()).then(json => {\n      this.setState({\n        post: json\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPostAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Blog Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-add-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.formBlogPost.title,\n      onChange: this.handleFormChange,\n      placeholder: \"add your title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Nlog Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"body\",\n      id: \"body\",\n      cols: \"30\",\n      rows: \"10\",\n      value: this.state.formBlogPost.body,\n      onChange: this.handleFormChange,\n      placeholder: \"add blog content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Simpan\")), this.state.post.map(post => {\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post.id,\n        data: post,\n        remove: this.handleRemove,\n        update: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/myReact/project-react-app/src/Container/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","BlogPost","state","post","formBlogPost","id","title","body","userId","isUpdate","handleRemove","data","fetch","method","JSON","stringify","headers","then","res","getPostAPI","handleFormChange","event","timestamp","Date","getTime","formBlogPostNew","target","name","value","setState","handleSubmit","putDataAPI","err","console","log","handleUpdate","response","json","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport './BlogPost.css';\r\nimport Post from \"../../Component/Post/Post\";\r\n\r\n\r\nclass BlogPost extends Component {\r\n    state = {\r\n        post: [],\r\n        formBlogPost: {\r\n            id: 1,\r\n            title: '',\r\n            body: '',\r\n            userId: 1\r\n        },\r\n        isUpdate: false\r\n    }\r\n\r\n    getPostAPI() {\r\n        fetch('http://localhost:3004/posts?_sort=id&_order=desc')\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    post: json\r\n                })\r\n            })\r\n    }\r\n    handleRemove = (data) => {\r\n        fetch('http://localhost:3004/posts/' + data, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({\r\n\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then((res) => {\r\n            this.getPostAPI();\r\n        })\r\n    }\r\n\r\n    handleFormChange = (event) => {\r\n        let timestamp = new Date().getTime();\r\n        let formBlogPostNew = { ...this.state.formBlogPost };\r\n        formBlogPostNew['id'] = timestamp\r\n        formBlogPostNew[event.target.name] = event.target.value;\r\n        this.setState({\r\n            formBlogPost: formBlogPostNew\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.isUpdate) {\r\n            this.putDataAPI();\r\n        } else {\r\n            fetch('http://localhost:3004/posts/', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    id: this.state.formBlogPost.id,\r\n                    title: this.state.formBlogPost.title,\r\n                    body: this.state.formBlogPost.body,\r\n                    userId: 1\r\n                }),\r\n                headers: {\r\n                    \"Content-type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            }).then((res) => {\r\n                this.getPostAPI();\r\n            }, (err) => {\r\n                console.log('error: ', err);\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    handleUpdate = (data) => {\r\n        // console.log(data);\r\n        this.setState({\r\n            formBlogPost: data,\r\n            isUpdate: true\r\n        })\r\n\r\n    }\r\n    putDataAPI = (data) => {\r\n        fetch('http://localhost:3004/posts/',data, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                id: this.state.formBlogPost.title.id,\r\n                title: this.state.formBlogPost.title,\r\n                body: this.state.formBlogPost.body,\r\n                userId: 1\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then((res) => {\r\n            this.getPostAPI();\r\n        }, (err) => {\r\n            console.log('error: ', err);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPostAPI();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <p className=\"section-title\" >Blog Post</p>\r\n                <div className=\"form-add-post\">\r\n                    <label htmlFor=\"title\"></label>\r\n                    <input type=\"text\" name=\"title\" value={this.state.formBlogPost.title} onChange={this.handleFormChange} placeholder=\"add your title\" />\r\n                    <label htmlFor=\"body\">Nlog Content</label>\r\n                    <textarea name=\"body\" id=\"body\" cols=\"30\" rows=\"10\" value={this.state.formBlogPost.body} onChange={this.handleFormChange} placeholder=\"add blog content\"></textarea>\r\n                    <button className=\"btn-submit\" onClick={this.handleSubmit}>Simpan</button>\r\n                </div>\r\n                {\r\n                    this.state.post.map(post => {\r\n                        return <Post key={post.id} data={post} remove={this.handleRemove} update={this.handleUpdate} />\r\n                    })\r\n                }\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}