{"ast":null,"code":"let BaseUrl = 'http://localhost:3004/posts/';\nexport function RestAPIPost(type, userData) {\n  return new Promise((resolve, reject) => {\n    fetch(BaseUrl + type, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(responsejson => {\n      resolve(responsejson);\n    }).catch(error => {\n      reject(error);\n    }); // console.log(BaseUrl);\n  });\n}\nexport function RestAPIPut(type, userData) {\n  return new Promise((resolve, reject) => {\n    fetch(BaseUrl + type, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(responsejson => {\n      resolve(responsejson);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}\nexport function RestAPIDelete(type, userData) {\n  return new Promise((resolve, reject) => {\n    console.log(BaseUrl + type);\n    fetch(BaseUrl + type, {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => response.json()).then(responsejson => {\n      resolve(responsejson);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["D:/myReact/project-react-app/src/RestAPI.jsx"],"names":["BaseUrl","RestAPIPost","type","userData","Promise","resolve","reject","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responsejson","catch","error","RestAPIPut","RestAPIDelete","console","log"],"mappings":"AAAA,IAAIA,OAAO,GAAG,8BAAd;AACA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAoC;AAEvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpCC,IAAAA,KAAK,CAACP,OAAO,GAACE,IAAT,EAAc;AACfM,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AANS,KAAd,CAAL,CAQCW,IARD,CAQOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARpB,EASCF,IATD,CASOG,YAAD,IAAkB;AACpBZ,MAAAA,OAAO,CAACY,YAAD,CAAP;AACH,KAXD,EAYCC,KAZD,CAYQC,KAAD,IAAW;AACdb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACH,KAdD,EAFoC,CAiBpC;AACH,GAlBM,CAAP;AAmBH;AAED,OAAO,SAASC,UAAT,CAAoBlB,IAApB,EAA0BC,QAA1B,EAAmC;AACrC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACnCC,IAAAA,KAAK,CAACP,OAAO,GAACE,IAAT,EAAc;AACfM,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AANS,KAAd,CAAL,CAQCW,IARD,CAQOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARpB,EASCF,IATD,CASOG,YAAD,IAAkB;AACpBZ,MAAAA,OAAO,CAACY,YAAD,CAAP;AACH,KAXD,EAYCC,KAZD,CAYQC,KAAD,IAAW;AACdb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACH,KAdD;AAeF,GAhBM,CAAP;AAiBJ;AAED,OAAO,SAASE,aAAT,CAAuBnB,IAAvB,EAA6BC,QAA7B,EAAsC;AACzC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCgB,IAAAA,OAAO,CAACC,GAAR,CAAYvB,OAAO,GAACE,IAApB;AACAK,IAAAA,KAAK,CAACP,OAAO,GAACE,IAAT,EAAc;AACfM,MAAAA,MAAM,EAAE,QADO;AAEfC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFM;AAMfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,QAAf;AANS,KAAd,CAAL,CAQCW,IARD,CAQOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARpB,EASCF,IATD,CASOG,YAAD,IAAkB;AACpBZ,MAAAA,OAAO,CAACY,YAAD,CAAP;AACH,KAXD,EAYCC,KAZD,CAYQC,KAAD,IAAW;AACdb,MAAAA,MAAM,CAACa,KAAD,CAAN;AACH,KAdD;AAeF,GAjBK,CAAP;AAkBH","sourcesContent":["let BaseUrl = 'http://localhost:3004/posts/';\r\nexport function RestAPIPost(type, userData){\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        fetch(BaseUrl+type,{\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responsejson) => {\r\n            resolve(responsejson);\r\n        })\r\n        .catch((error) => {\r\n            reject(error);\r\n        })\r\n        // console.log(BaseUrl);\r\n    });\r\n}\r\n\r\nexport function RestAPIPut(type, userData){\r\n     return new Promise((resolve, reject)=>{\r\n        fetch(BaseUrl+type,{\r\n            method: 'PUT',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responsejson) => {\r\n            resolve(responsejson);\r\n        })\r\n        .catch((error) => {\r\n            reject(error);\r\n        })\r\n     })\r\n}\r\n\r\nexport function RestAPIDelete(type, userData){\r\n    return new Promise((resolve, reject)=>{\r\n        console.log(BaseUrl+type);\r\n        fetch(BaseUrl+type,{\r\n            method: 'DELETE',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(userData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responsejson) => {\r\n            resolve(responsejson);\r\n        })\r\n        .catch((error) => {\r\n            reject(error);\r\n        })\r\n     })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}