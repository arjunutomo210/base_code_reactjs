{"ast":null,"code":"var _jsxFileName = \"D:\\\\myReact\\\\project-react-app\\\\src\\\\Container\\\\Pages\\\\BlogPost\\\\BlogPost.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport './BlogPost.css';\nimport Post from \"../../../Component/Post/Post\";\nimport { RestAPIPost } from \"../../../RestAPI\";\nimport { RestAPIPut } from \"../../../RestAPI\";\nimport { RestAPIDelete } from \"../../../RestAPI\";\n\nclass BlogPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: [],\n      formBlogPost: {\n        id: 1,\n        title: '',\n        body: '',\n        userId: 1\n      },\n      isUpdate: false\n    };\n\n    this.handleRemove = data => {\n      // fetch('http://localhost:3004/posts/' + data, {\n      //     method: 'DELETE',\n      //     body: JSON.stringify({\n      //     }),\n      //     headers: {\n      //         \"Content-type\": \"application/json; charset=UTF-8\"\n      //     }\n      // }).then((res) => {\n      //     this.getPostAPI();\n      // })\n      this.body = {};\n      RestAPIDelete(data, this.body).then(result => {\n        this.getPostAPI();\n      }, err => {\n        console.log('error: ', err);\n      });\n    };\n\n    this.handleFormChange = event => {\n      let timestamp = new Date().getTime();\n      let formBlogPostNew = { ...this.state.formBlogPost\n      };\n\n      if (!this.state.isUpdate) {\n        formBlogPostNew['id'] = timestamp;\n      }\n\n      formBlogPostNew[event.target.name] = event.target.value;\n      this.setState({\n        formBlogPost: formBlogPostNew\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.isUpdate) {\n        this.putDataAPI();\n      } else {\n        this.postDataApi();\n      }\n    };\n\n    this.postDataApi = () => {\n      // fetch('http://localhost:3004/posts/', {\n      //     method: 'POST',\n      //     body: JSON.stringify({\n      //         id: this.state.formBlogPost.id,\n      //         title: this.state.formBlogPost.title,\n      //         body: this.state.formBlogPost.body,\n      //         userId: 1\n      //     }),\n      //     headers: {\n      //         \"Content-type\": \"application/json; charset=UTF-8\"\n      //     }\n      // }).then(response => response.json())\n      //     .then(json => {\n      //         this.getPostAPI();\n      //         this.setState({\n      //             formBlogPost: {\n      //                 id: 1,\n      //                 title: '',\n      //                 body: '',\n      //                 userId: 1\n      //             },\n      //             isUpdate: false\n      //         })\n      //     }, (err) => {\n      //         console.log('error: ', err);\n      //     })\n      this.body = {\n        id: this.state.formBlogPost.id,\n        title: this.state.formBlogPost.title,\n        body: this.state.formBlogPost.body,\n        userId: 1\n      };\n      RestAPIPost('', this.body).then(result => {\n        this.getPostAPI();\n        this.setState({\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          }\n        });\n      }, err => {\n        console.log('error: ', err);\n      });\n    };\n\n    this.handleUpdate = data => {\n      // console.log(data);\n      this.setState({\n        formBlogPost: data,\n        isUpdate: true\n      });\n    };\n\n    this.putDataAPI = () => {\n      // fetch('http://localhost:3004/posts/' + this.state.formBlogPost.id, {\n      //     method: 'PUT',\n      //     body: JSON.stringify({\n      //         id: this.state.formBlogPost.title.id,\n      //         title: this.state.formBlogPost.title,\n      //         body: this.state.formBlogPost.body,\n      //         userId: 1\n      //     }),\n      //     headers: {\n      //         \"Content-type\": \"application/json; charset=UTF-8\"\n      //     }\n      // }).then(response => response.json())\n      //     .then(json => {\n      //         this.getPostAPI();\n      //         this.setState({\n      //             formBlogPost: {\n      //                 id: 1,\n      //                 title: '',\n      //                 body: '',\n      //                 userId: 1\n      //             },\n      //             isUpdate: false\n      //         })\n      //     }, (err) => {\n      //         console.log('error: ', err);\n      //     })\n      this.body = {\n        id: this.state.formBlogPost.id,\n        title: this.state.formBlogPost.title,\n        body: this.state.formBlogPost.body,\n        userId: 1\n      };\n      RestAPIPut(this.state.formBlogPost.id, this.body).then(result => {\n        this.getPostAPI();\n        this.setState({\n          formBlogPost: {\n            id: 1,\n            title: '',\n            body: '',\n            userId: 1\n          },\n          isUpdate: false\n        });\n      }, err => {\n        console.log('error: ', err);\n      });\n    };\n\n    this.handleDetail = id => {\n      this.props.history.push(`/detail-post/${id}`);\n    };\n  }\n\n  getPostAPI() {\n    // fetch('http://localhost:3004/posts?_sort=id&_order=desc')\n    //     .then(response => response.json())\n    //     .then(json => {\n    //         this.setState({\n    //             post: json\n    //         })\n    //     })\n    this.body = {};\n    RestAPIGet('?_sort=id&_order=desc', this.body).then(result => {\n      this.setState({\n        post: json\n      });\n    }, err => {\n      console.log('error: ', err);\n    });\n  }\n\n  componentDidMount() {\n    this.getPostAPI();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"Halaman BlogPost\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"section-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, \"Blog Post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-add-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.formBlogPost.title,\n      onChange: this.handleFormChange,\n      placeholder: \"add your title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \"Nlog Content\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"body\",\n      id: \"body\",\n      cols: \"30\",\n      rows: \"10\",\n      value: this.state.formBlogPost.body,\n      onChange: this.handleFormChange,\n      placeholder: \"add blog content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button btn-submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"Simpan\")), this.state.post.map(post => {\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post.id,\n        data: post,\n        remove: this.handleRemove,\n        update: this.handleUpdate,\n        goDetail: this.handleDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 32\n        }\n      });\n    }));\n  }\n\n}\n\nexport default BlogPost;","map":{"version":3,"sources":["D:/myReact/project-react-app/src/Container/Pages/BlogPost/BlogPost.jsx"],"names":["React","Component","Fragment","Post","RestAPIPost","RestAPIPut","RestAPIDelete","BlogPost","state","post","formBlogPost","id","title","body","userId","isUpdate","handleRemove","data","then","result","getPostAPI","err","console","log","handleFormChange","event","timestamp","Date","getTime","formBlogPostNew","target","name","value","setState","handleSubmit","putDataAPI","postDataApi","handleUpdate","handleDetail","props","history","push","RestAPIGet","json","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport './BlogPost.css';\r\n\r\nimport Post from \"../../../Component/Post/Post\";\r\nimport { RestAPIPost } from \"../../../RestAPI\";\r\nimport { RestAPIPut } from \"../../../RestAPI\";\r\nimport { RestAPIDelete } from \"../../../RestAPI\";\r\n\r\n\r\nclass BlogPost extends Component {\r\n    state = {\r\n        post: [],\r\n        formBlogPost: {\r\n            id: 1,\r\n            title: '',\r\n            body: '',\r\n            userId: 1\r\n        },\r\n        isUpdate: false\r\n    }\r\n\r\n    getPostAPI() {\r\n        // fetch('http://localhost:3004/posts?_sort=id&_order=desc')\r\n        //     .then(response => response.json())\r\n        //     .then(json => {\r\n        //         this.setState({\r\n        //             post: json\r\n        //         })\r\n        //     })\r\n        this.body = {\r\n            \r\n        }\r\n        RestAPIGet('?_sort=id&_order=desc', this.body).then((result) => {\r\n            this.setState({\r\n                post: json\r\n            })\r\n        }, (err) => {\r\n            console.log('error: ', err);\r\n        })\r\n    }\r\n    handleRemove = (data) => {\r\n        // fetch('http://localhost:3004/posts/' + data, {\r\n        //     method: 'DELETE',\r\n        //     body: JSON.stringify({\r\n\r\n        //     }),\r\n        //     headers: {\r\n        //         \"Content-type\": \"application/json; charset=UTF-8\"\r\n        //     }\r\n        // }).then((res) => {\r\n        //     this.getPostAPI();\r\n        // })\r\n        this.body = {\r\n\r\n        }\r\n        RestAPIDelete(data, this.body).then((result) => {\r\n            this.getPostAPI();\r\n        }, (err) => {\r\n            console.log('error: ', err);\r\n        })\r\n\r\n    }\r\n\r\n    handleFormChange = (event) => {\r\n        let timestamp = new Date().getTime();\r\n        let formBlogPostNew = { ...this.state.formBlogPost };\r\n        if (!this.state.isUpdate) {\r\n            formBlogPostNew['id'] = timestamp\r\n        }\r\n        formBlogPostNew[event.target.name] = event.target.value;\r\n        this.setState({\r\n            formBlogPost: formBlogPostNew\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.isUpdate) {\r\n            this.putDataAPI();\r\n        } else {\r\n            this.postDataApi();\r\n        }\r\n    }\r\n    postDataApi = () => {\r\n        // fetch('http://localhost:3004/posts/', {\r\n        //     method: 'POST',\r\n        //     body: JSON.stringify({\r\n        //         id: this.state.formBlogPost.id,\r\n        //         title: this.state.formBlogPost.title,\r\n        //         body: this.state.formBlogPost.body,\r\n        //         userId: 1\r\n        //     }),\r\n        //     headers: {\r\n        //         \"Content-type\": \"application/json; charset=UTF-8\"\r\n        //     }\r\n        // }).then(response => response.json())\r\n        //     .then(json => {\r\n        //         this.getPostAPI();\r\n        //         this.setState({\r\n        //             formBlogPost: {\r\n        //                 id: 1,\r\n        //                 title: '',\r\n        //                 body: '',\r\n        //                 userId: 1\r\n        //             },\r\n        //             isUpdate: false\r\n        //         })\r\n        //     }, (err) => {\r\n        //         console.log('error: ', err);\r\n        //     })\r\n        this.body = {\r\n            id: this.state.formBlogPost.id,\r\n            title: this.state.formBlogPost.title,\r\n            body: this.state.formBlogPost.body,\r\n            userId: 1\r\n        }\r\n        RestAPIPost('', this.body).then((result) => {\r\n            this.getPostAPI();\r\n            this.setState({\r\n                formBlogPost: {\r\n                    id: 1,\r\n                    title: '',\r\n                    body: '',\r\n                    userId: 1\r\n                }\r\n            })\r\n        }, (err) => {\r\n            console.log('error: ', err);\r\n        })\r\n    }\r\n    handleUpdate = (data) => {\r\n        // console.log(data);\r\n        this.setState({\r\n            formBlogPost: data,\r\n            isUpdate: true\r\n        })\r\n\r\n    }\r\n    putDataAPI = () => {\r\n        // fetch('http://localhost:3004/posts/' + this.state.formBlogPost.id, {\r\n        //     method: 'PUT',\r\n        //     body: JSON.stringify({\r\n        //         id: this.state.formBlogPost.title.id,\r\n        //         title: this.state.formBlogPost.title,\r\n        //         body: this.state.formBlogPost.body,\r\n        //         userId: 1\r\n        //     }),\r\n        //     headers: {\r\n        //         \"Content-type\": \"application/json; charset=UTF-8\"\r\n        //     }\r\n        // }).then(response => response.json())\r\n        //     .then(json => {\r\n        //         this.getPostAPI();\r\n        //         this.setState({\r\n        //             formBlogPost: {\r\n        //                 id: 1,\r\n        //                 title: '',\r\n        //                 body: '',\r\n        //                 userId: 1\r\n        //             },\r\n        //             isUpdate: false\r\n        //         })\r\n        //     }, (err) => {\r\n        //         console.log('error: ', err);\r\n        //     })\r\n        this.body = {\r\n            id: this.state.formBlogPost.id,\r\n            title: this.state.formBlogPost.title,\r\n            body: this.state.formBlogPost.body,\r\n            userId: 1\r\n        }\r\n        RestAPIPut(this.state.formBlogPost.id, this.body).then((result) => {\r\n            this.getPostAPI();\r\n            this.setState({\r\n                formBlogPost: {\r\n                    id: 1,\r\n                    title: '',\r\n                    body: '',\r\n                    userId: 1\r\n                },\r\n                isUpdate: false\r\n            })\r\n        }, (err) => {\r\n            console.log('error: ', err);\r\n        })\r\n    }\r\n\r\n    handleDetail = (id) =>{\r\n       \r\n        this.props.history.push(`/detail-post/${id}`)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getPostAPI();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <p>Halaman BlogPost</p>\r\n                <hr />\r\n                <p className=\"section-title\" >Blog Post</p>\r\n                <div className=\"form-add-post\">\r\n                    <label htmlFor=\"title\"></label>\r\n                    <input type=\"text\" name=\"title\" value={this.state.formBlogPost.title} onChange={this.handleFormChange} placeholder=\"add your title\" />\r\n                    <label htmlFor=\"body\">Nlog Content</label>\r\n                    <textarea name=\"body\" id=\"body\" cols=\"30\" rows=\"10\" value={this.state.formBlogPost.body} onChange={this.handleFormChange} placeholder=\"add blog content\"></textarea>\r\n                    <button className=\"button btn-submit\" onClick={this.handleSubmit}>Simpan</button>\r\n                </div>\r\n                {\r\n                    this.state.post.map(post => {\r\n                        return <Post key={post.id} data={post} remove={this.handleRemove} update={this.handleUpdate}  goDetail={this.handleDetail}/>\r\n                    })\r\n                }\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;"]},"metadata":{},"sourceType":"module"}